{mem[3],mem[2],mem[1],mem[0]}     = 32'h00000013;  //        addi x0, x0, 0
{mem[7],mem[6],mem[5],mem[4]}     = 32'h00540413;  //        addi x8, x8, 5	                          
{mem[11],mem[10],mem[9],mem[8]}   = 32'h00a48493;  //        addi x9, x9, 10                          
{mem[15],mem[14],mem[13],mem[12]} = 32'h00440413;  // loop:  addi x8, x8, 4       # RAW               
{mem[19],mem[18],mem[17],mem[16]} = 32'hfe944ee3;  //        blt  x8, x9, loop    # RAW & Control     
{mem[23],mem[22],mem[21],mem[20]} = 32'hffd40413;  // loop2: addi x8, x8, -3      # RAW               
{mem[27],mem[26],mem[25],mem[24]} = 32'hfe945ee3;  //        bge x8, x9, loop2    # RAW & Control     
{mem[31],mem[30],mem[29],mem[28]} = 32'h00728293;  //        addi x5, x5, 7                           
{mem[35],mem[34],mem[33],mem[32]} = 32'hfe540ae3;  //        beq x8, x5, loop2    # RAW & Control     
{mem[39],mem[38],mem[37],mem[36]} = 32'hfffe0e13;  //        addi x28, x28, -1                        
{mem[43],mem[42],mem[41],mem[40]} = 32'hffd30313;  //        addi x6, x6, -3                          
{mem[47],mem[46],mem[45],mem[44]} = 32'h00130313;  // loop3: addi x6, x6, 1       # RAW               
{mem[51],mem[50],mem[49],mem[48]} = 32'hffc36ee3;  //        bltu x6, x28, loop3  # RAW & Control     
{mem[55],mem[54],mem[53],mem[52]} = 32'hfff30313;  //        addi x6, x6, -1                          
{mem[59],mem[58],mem[57],mem[56]} = 32'h006e7463;  //        bgeu x28, x6, loop4  # RAW & Control     
{mem[63],mem[62],mem[61],mem[60]} = 32'hfff30313;  //        addi x6, x6, -1                          
{mem[67],mem[66],mem[65],mem[64]} = 32'h00128293;  // loop4: addi x5, x5, 1                           
{mem[71],mem[70],mem[69],mem[68]} = 32'h00041463;  //        bne x8, x0, EXIT                         
{mem[75],mem[74],mem[73],mem[72]} = 32'h00128293;  //        addi x5, x5, 1                           
{mem[79],mem[78],mem[77],mem[76]} = 32'h00100073;  // EXIT:  ebreak